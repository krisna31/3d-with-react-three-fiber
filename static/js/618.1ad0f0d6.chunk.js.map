{"version":3,"file":"static/js/618.1ad0f0d6.chunk.js","mappings":"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","sources":["atoms/MyBox.jsx","atoms/MyDodecahedron.jsx","App/atoms/MyTorusKnot.jsx","components/MyCanvas.jsx"],"sourcesContent":["import { useSpring, animated } from \"@react-spring/three\";\r\nimport { MeshWobbleMaterial } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport React, { useRef, useState } from \"react\";\r\n\r\nfunction MyBox({ color, args, speed, pos }) {\r\n  const mesh = useRef();\r\n  useFrame(() => {\r\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\r\n  });\r\n  const [expand, setExpand] = useState(false);\r\n  const props = useSpring({\r\n    scale: expand ? [1.5, 1.5, 1.5] : [1, 1, 1],\r\n    position: [Math.round(-pos + Math.random() * pos), Math.round(Math.random() * pos), Math.round(-3 + Math.random() * pos)],\r\n  });\r\n  return (\r\n    <animated.mesh\r\n      position={props.position}\r\n      ref={mesh}\r\n      onClick={() => {\r\n        setExpand(!expand);\r\n      }}\r\n      scale={props.scale}\r\n      castShadow\r\n    >\r\n      <boxGeometry args={args} />\r\n      <MeshWobbleMaterial color={expand ? \"green\" : color} speed={speed} factor={0.6} />\r\n    </animated.mesh>\r\n  );\r\n}\r\n\r\nexport default MyBox;\r\n","import { useSpring, animated } from \"@react-spring/three\";\r\nimport { MeshDistortMaterial, MeshWobbleMaterial } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport React, { useRef, useState } from \"react\";\r\n\r\nfunction MyDodecahedron({ color, args, speed, pos }) {\r\n  const mesh = useRef();\r\n  useFrame(() => {\r\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\r\n  });\r\n  const [expand, setExpand] = useState(false);\r\n  const props = useSpring({\r\n    scale: expand ? [1.5, 1.5, 1.5] : [1, 1, 1],\r\n    position: [Math.round(-pos + Math.random() * pos), Math.round(Math.random() * pos), Math.round(-3 + Math.random() * pos)],\r\n  });\r\n  return (\r\n    <animated.mesh\r\n      position={props.position}\r\n      ref={mesh}\r\n      onClick={() => {\r\n        setExpand(!expand);\r\n      }}\r\n      scale={props.scale}\r\n      castShadow\r\n    >\r\n      <dodecahedronGeometry args={args} />\r\n      <MeshDistortMaterial color={expand ? \"green\" : color} speed={speed} factor={0.6} />\r\n    </animated.mesh>\r\n  );\r\n}\r\n\r\nexport default MyDodecahedron;\r\n","import { useSpring, animated } from \"@react-spring/three\";\r\nimport { MeshWobbleMaterial } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { TorusKnotGeometry } from \"three\";\r\n\r\nfunction MyTorusKnot({ color, args, speed, pos }) {\r\n  const mesh = useRef();\r\n  useFrame(() => {\r\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\r\n  });\r\n  const [expand, setExpand] = useState(false);\r\n  const props = useSpring({\r\n    scale: expand ? [1.5, 1.5, 1.5] : [1, 1, 1],\r\n    position: [Math.round(-pos + Math.random() * pos) + 10, Math.round(Math.random() * pos) + 10, Math.round(-3 + Math.random() * pos)],\r\n  });\r\n  return (\r\n    <animated.mesh\r\n      position={props.position}\r\n      ref={mesh}\r\n      onClick={() => {\r\n        setExpand(!expand);\r\n      }}\r\n      scale={props.scale}\r\n      castShadow\r\n    >\r\n      <torusKnotGeometry args={args} />\r\n      <MeshWobbleMaterial color={expand ? \"green\" : color} speed={speed} factor={0.6} />\r\n    </animated.mesh>\r\n  );\r\n}\r\n\r\nexport default MyTorusKnot;\r\n","import { Environment, OrbitControls, PerspectiveCamera, PointerLockControls, ScreenQuad } from \"@react-three/drei\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport React, { Suspense, useRef } from \"react\";\r\nimport MyBox from \"../atoms/MyBox\";\r\nimport { softShadows } from \"@react-three/drei\";\r\nimport MyDodecahedron from \"../atoms/MyDodecahedron\";\r\nimport Spinner from \"../atoms/Spinner\";\r\nimport MyTorusKnot from \"../App/atoms/MyTorusKnot\";\r\n\r\nsoftShadows();\r\n\r\nconst MyCanvas = ({ gpu }) => {\r\n  const FORPC = [3, 6, 9, 12, 15, 18, 21, 25, 28, 30];\r\n  const FORMOBILE = [3, 6, 9, 12, 15];\r\n  return (\r\n    <>\r\n      {gpu.isMobile ? (\r\n        <Canvas\r\n          shadows\r\n          className=\"bg-sky-300 min-h-screen flex justify-center items-center absolute\"\r\n          camera={{\r\n            position: [0, 10, 22],\r\n            fov: 88,\r\n          }}\r\n        >\r\n          <ambientLight intensity={0.3} />\r\n          <directionalLight\r\n            castShadow\r\n            position={[0, 10, 0]}\r\n            intensity={2}\r\n            shadow-mapSize-width={1024}\r\n            shadow-mapSize-height={1024}\r\n            shadow-camera-far={50}\r\n            shadow-camera-left={-10}\r\n            shadow-camera-right={10}\r\n            shadow-camera-top={10}\r\n            shadow-camera-bottom={-10}\r\n          />\r\n          <pointLight position={[-10, 0, -20]} intensity={0.5} />\r\n          <pointLight position={[0, -10, 0]} intensity={1.5} />\r\n          <group>\r\n            <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -3, 0]} receiveShadow>\r\n              <planeBufferGeometry args={[100, 100]} />\r\n              <shadowMaterial opacity={0.5} />\r\n            </mesh>\r\n            {FORMOBILE.map((pos, index) => (\r\n              <React.Fragment key={index}>\r\n                <MyBox args={[3, 2, 1]} color=\"lightblue\" speed={2} pos={pos} />\r\n                <MyDodecahedron args={[1, 8]} color=\"gray\" speed={5} pos={pos} />\r\n                <MyTorusKnot args={[2, 0.5, 100, 16, 2, 3]} color=\"blue\" speed={5} pos={pos + 6} />\r\n              </React.Fragment>\r\n            ))}\r\n          </group>\r\n          <OrbitControls autoRotate enableZoom={true} enablePan={false} />\r\n        </Canvas>\r\n      ) : (\r\n        <Canvas\r\n          shadows\r\n          className=\"bg-sky-300 min-h-screen flex justify-center items-center absolute\"\r\n          camera={{\r\n            position: [0, 10, 22],\r\n            fov: 88,\r\n          }}\r\n        >\r\n          <ambientLight intensity={0.3} />\r\n          <directionalLight\r\n            castShadow\r\n            position={[0, 10, 0]}\r\n            intensity={2}\r\n            shadow-mapSize-width={1024}\r\n            shadow-mapSize-height={1024}\r\n            shadow-camera-far={50}\r\n            shadow-camera-left={-10}\r\n            shadow-camera-right={10}\r\n            shadow-camera-top={10}\r\n            shadow-camera-bottom={-10}\r\n          />\r\n          <pointLight position={[-10, 0, -20]} intensity={0.5} />\r\n          <pointLight position={[0, -10, 0]} intensity={1.5} />\r\n          <group>\r\n            <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -3, 0]} receiveShadow>\r\n              <planeBufferGeometry args={[100, 100]} />\r\n              <shadowMaterial opacity={0.5} />\r\n            </mesh>\r\n            {FORPC.map((pos, index) => (\r\n              <React.Fragment key={index}>\r\n                <MyBox args={[3, 2, 1]} color=\"lightblue\" speed={2} pos={pos} />\r\n                <MyDodecahedron args={[1, 8]} color=\"gray\" speed={5} pos={pos} />\r\n                <MyTorusKnot args={[2, 0.5, 100, 16, 2, 3]} color=\"blue\" speed={5} pos={pos + 6} />\r\n              </React.Fragment>\r\n            ))}\r\n          </group>\r\n          <OrbitControls autoRotate enableZoom={true} enablePan={false} />\r\n        </Canvas>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyCanvas;\r\n"],"names":["color","args","speed","pos","mesh","useRef","useFrame","current","rotation","x","y","useState","expand","setExpand","props","useSpring","scale","position","Math","round","random","animated","ref","onClick","castShadow","MeshWobbleMaterial","factor","MeshDistortMaterial","softShadows","gpu","isMobile","shadows","className","camera","fov","intensity","PI","receiveShadow","opacity","map","index","OrbitControls","autoRotate","enableZoom","enablePan"],"sourceRoot":""}